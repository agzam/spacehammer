* Edit with Emacs

  [[./edit-with-emacs-demo.gif/]]

  Any text, in just any app can be edited using Emacs. The idea is simple - you press a dedicated key-combo (default: =Cmd+Ctrl+O=), Spacehammer copies the existing text & calls ~emacsclient~, then it invokes a function that opens a buffer and pastes the text into it. After you're done editing the text in Emacs, you press =C-c C-c=, it grabs the text, switches back to the program & pastes the text back in there. It works surprisingly well.

  You can for example:
  - open Browser's Dev Tools;
  - press =Cmd+Ctrl+O=,
  - then in Emacs, switch to js-mode, have all the bells and whistles: syntax-highlighting, autocomplete, etc.;
  - write some javascript;
  - finish editing, press =C-c C-c=
    and it would paste the code back into the Dev Tools console.

** Setup and customization

   Note that Emacs *has to be running in daemon mode*, [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html][see documentation]].

   After Spacehammer invokes ~emacsclient~ , it invokes emacs-lisp function(s). Those functions are in the =~/.hammerspoon/spacehammer.el= Emacs package. That package needs to be pre-loaded into Emacs.

*** Package installation

    The package currently is not available on MELPA or other public repositories, so you have to use ~use-package~ or other ways to load it to Emacs.

*** Spacemacs

    Spacemacs users can either:
    - add the package recipe to ~dotspacemacs-additional-packages~;
    - or create a custom Spacemacs layer;
    - or add required pieces to an existing one.

      Creating a layer is easy, you need a ~packages.el~ file in a directory for your custom layer (to learn more, check [[https://github.com/syl20bnr/spacemacs/blob/develop/doc/LAYERS.org][Spacemacs documentation]])

**** Spacemacs layer minimal example
    Let's say you call the layer ~my-layer~, then the directory structure would look like the following:

    #+begin_src
    ├── my-layer
    │   └── packages.el
    #+end_src

    You place ~my-layer~ in ~dotspacemacs-configuration-layer-path~ directory of your Spacemacs config.

    Here's a minimal example of ~packages.el~ that includes spacehammer.el:

    - First, you need to add spacehammer to the list of packages included in the layer
      #+begin_src emacs-lisp
        (defconst my-layer-packages
          '((spacehammer
             :location (recipe                        ; Basically this telling Emacs
                        :fetcher file                 ; where to look for the package file (spacehammer.el)
                        :path "~/.hammerspoon/"))))


        ;; Sometimes (depending on Emacs version and other things) that approach may not
        ;; work. Emacs will complain about not being able to load the package. In that
        ;; case, you can symlink the file and the directory structure for the layer has
        ;; to be like this:

        ;; .
        ;; ├── local
        ;; │   └── spacehammer
        ;; │       └── spacehammer.el -> ~/.hammerspoon/spacehammer.el
        ;; └── packages.el

        ;; and the recipe would have to be something like this:

        (defconst my-layer-packages
          '((spacehammer :location local)))

        ;; if you'd like to use the same Spacemacs config on different machines that
        ;; aren't Macs, and you don't want it to complain about not finding the package
        ;; (since Hammerspoon is not there):

        (defconst my-layer-packages `(,(when (eq system-type 'darwin)
                                         '(spacehammer :location local))))
      #+end_src

    - Next thing you need is to add an init function like so:

    #+begin_src emacs-lisp
      (defun my-layer/init-spacehammer ()
        (use-package spacehammer
          :demand t))
    #+end_src

    - Add your layer to ~dotspacemacs-configuration-layers~ in your Spacemacs config
    - Either restart Emacs or run ~M-x dotspacemacs/sync-configuration-layers~ =<SPC f e R>=

*** Customization
    You can customize the major mode and other things for the edit-with-emacs buffer using ~spacehammer/edit-with-emacs-hook~, here's an example:

    #+begin_src emacs-lisp
      ;; Note that the hook function accepts arguments, and if the wrong number
      ;; of arguments is passed it won't work.
      ;; Refer to spacehammer.el source to learn more

      (defun on-spacehammer-edit-with-emacs (buffer-name pid title)
        (with-current-buffer (get-buffer buffer-name)
          (spacemacs/evil-search-clear-highlight)
          (spacemacs/toggle-visual-line-navigation-on)
          (markdown-mode)
          (evil-insert 1)))

      (use-package spacehammer
        :demand t
        :config
        (add-hook 'spacehammer/edit-with-emacs-hook 'on-spacehammer-edit-with-emacs))
    #+end_src

    You can see that using the hook allows some versatility and you can, for example, set a different major-mode for different applications or toggle variable-pitch, line-numbers, etc.
